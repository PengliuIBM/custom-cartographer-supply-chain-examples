apiVersion: carto.run/v1alpha1
kind: ClusterConfigTemplate
metadata:
  name: config-deliverable-template
spec:
  configPath: .data
  ytt: |
    #@ load("@ytt:data", "data")
    #@ load("@ytt:yaml", "yaml")

    #@ def has_git_params():
    #@   if 'gitops_repository_prefix' in data.values.params:
    #@     return True
    #@   end
    #@
    #@   if 'gitops_repository' in data.values.params:
    #@     return True
    #@   end
    #@
    #@   return False
    #@ end

    #@ def is_gitops():
    #@   return has_git_params()
    #@ end

    #@ def param(key):
    #@   if not key in data.values.params:
    #@     return None
    #@   end
    #@   return data.values.params[key]
    #@ end

    #@ def git_repository():
    #@   if 'gitops_repository' in data.values.params:
    #@     return param("gitops_repository")
    #@   end
    #@
    #@   prefix = param("gitops_repository_prefix")
    #@   return prefix + data.values.workload.metadata.name + ".git"
    #@ end

    #@ def merge_labels(fixed_values):
    #@   labels = {}
    #@   if hasattr(data.values.workload.metadata, "labels"):
    #@     labels.update(data.values.workload.metadata.labels)
    #@   end
    #@   labels.update(fixed_values)
    #@   return labels
    #@ end

    #@ def deliverable():
    apiVersion: carto.run/v1alpha1
    kind: Deliverable
    metadata:
      name: #@ data.values.workload.metadata.name
      labels: #@ merge_labels({ "app.kubernetes.io/component": "deliverable", "app.tanzu.vmware.com/deliverable-type": "web" })
    spec:
      #@ if/end hasattr(data.values.workload.spec, "serviceAccountName"):
      serviceAccountName: #@ data.values.workload.spec.serviceAccountName

      params:
        - name: "gitops_ssh_secret"
          value: #@ param("gitops_ssh_secret")

      source:
        git:
          url: #@ git_repository()
          ref:
            branch: #@ param("gitops_branch")

    #@ end

    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: #@ data.values.workload.metadata.name + "-deliverable"
      labels: #@ merge_labels({ "app.kubernetes.io/component": "config" })
    data:
      deliverable.yml: #@ yaml.encode(deliverable())