apiVersion: carto.run/v1alpha1
kind: ClusterTemplate
metadata:
  name: deliverable-tpl
spec:
  params:
  - default: {}
    name: registry
  ytt: |
    #@ load("@ytt:data", "data")

    #@ def image():
    #@   return "/".join([
    #@    data.values.params.registry_server,
    #@    data.values.params.registry_repository,
    #@    "-".join([
    #@      data.values.workload.metadata.name,
    #@      data.values.workload.metadata.namespace,
    #@      "bundle",
    #@    ])
    #@   ]) + ":" + data.values.workload.metadata.uid
    #@ end


    ---
    apiVersion: carto.run/v1alpha1
    kind: Deliverable
    metadata:
      name: #@ data.values.workload.metadata.name
      labels:
        deliverable-intent: image-prebuilt
        #@ if/end hasattr(data.values.workload.metadata, "labels") and hasattr(data.values.workload.metadata.labels, "app.kubernetes.io/part-of"):
        app.kubernetes.io/part-of: #@ data.values.workload.metadata.labels["app.kubernetes.io/part-of"]
    spec:
      #@ if/end hasattr(data.values.workload.spec, "serviceAccountName"):
      serviceAccountName: #@ data.values.workload.spec.serviceAccountName

      source:
        image: #@ image()