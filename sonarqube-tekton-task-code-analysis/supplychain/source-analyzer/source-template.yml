apiVersion: carto.run/v1alpha1
kind: ClusterSourceTemplate
metadata:
  annotations:
  name: sonarqube-template
spec:
  params:
    - name: serviceAccount
      default: default
  revisionPath: .status.outputs.revision
  urlPath: .status.outputs.url

  ytt: |
    #@ load("@ytt:data", "data")

    #@ def merge_labels(fixed_values):
    #@   labels = {}
    #@   if hasattr(data.values.workload.metadata, "labels"):
    #@     labels.update(data.values.workload.metadata.labels)
    #@   end
    #@   labels.update(fixed_values)
    #@   return labels
    #@ end

    apiVersion: carto.run/v1alpha1
    kind: Runnable
    metadata:
      name: #@ data.values.workload.metadata.name
      labels: #@ merge_labels({ "app.kubernetes.io/component": "test" })
    spec:
      #@ if/end hasattr(data.values.workload.spec, "serviceAccountName"):
      serviceAccountName: #@ data.values.workload.spec.serviceAccountName

      runTemplateRef:
        name: tekton-sonarqube-taskrun
        kind: ClusterRunTemplate

      selector:
        resource:
          apiVersion: tekton.dev/v1beta1
          kind: Task
        matchingLabels:
          apps.tanzu.vmware.com/sonarqube: "sonarqube"

      #!
      #! This is how we pass parameters down to our task.
      #! The clusterRunTemplate will catch these parameters,
      #! then pass them down to the Task.
      #!
      inputs:
        source-url: #@ data.values.source.url
        source-revision: #@ data.values.source.revision

        #! Notice that the above two values start with 'data.values.source...'
        #! while these start with 'data.values.workload....'.
        #! That's because the above values come from the previous Source in the 
        #! supply chain (i.e. where I can find my code)
        #! These values below are pulled from the workload.yml (hence the 'workload').

        #! Default to the svc account named 'default'. But allow users to override
        #! via their workload.yml.
        #@ if hasattr(data.values.workload.spec, "serviceAccountName"):
        serviceAccount: #@ data.values.workload.spec.serviceAccountName
        #@ else:
        serviceAccount: default
        #@ end

        sonar-project-key: #@ data.values.workload.metadata.name